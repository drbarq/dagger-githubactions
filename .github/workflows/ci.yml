name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dagger
        run: |
          cd /usr/local
          curl -L https://dl.dagger.io/dagger/install.sh | sh

      - name: Install Doppler CLI
        run: |
          curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/install.sh' | sudo sh

      - name: Fetch secrets from Doppler
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
        run: |
          # Fetch SECRET_MESSAGE from Doppler and set as environment variable
          echo "SECRET_MESSAGE=$(doppler secrets get SECRET_MESSAGE --token=$DOPPLER_TOKEN --plain)" >> $GITHUB_ENV

      - name: Run tests with Dagger
        run: |
          dagger call test --secret-message=env:SECRET_MESSAGE

  build-and-publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Dagger
        run: |
          cd /usr/local
          curl -L https://dl.dagger.io/dagger/install.sh | sh

      - name: Publish container
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN }}
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          REGISTRY: ${{ secrets.REGISTRY || 'docker.io/username' }}
        run: |
          dagger call publish \
            --registry="${REGISTRY}" \
            --username="${REGISTRY_USERNAME}" \
            --password=env:REGISTRY_PASSWORD \
            --tag="${GITHUB_SHA:0:7}"